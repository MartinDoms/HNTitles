// <auto-generated />
using System;
using HNTitles;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HNTitles.Migrations
{
    [DbContext(typeof(ItemContext))]
    [Migration("20210604185203_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("HNTitles.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("URL")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("HNTitles.ItemEntry", b =>
                {
                    b.Property<int>("ItemEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PreviousEntryItemEntryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreviousEntryItemId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("RecordedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemEntryId");

                    b.HasIndex("ItemId");

                    b.HasIndex("PreviousEntryItemEntryId");

                    b.ToTable("ItemEntries");
                });

            modelBuilder.Entity("HNTitles.ItemEntry", b =>
                {
                    b.HasOne("HNTitles.Item", "Item")
                        .WithMany("Entries")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HNTitles.ItemEntry", "PreviousEntry")
                        .WithMany()
                        .HasForeignKey("PreviousEntryItemEntryId");

                    b.Navigation("Item");

                    b.Navigation("PreviousEntry");
                });

            modelBuilder.Entity("HNTitles.Item", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
